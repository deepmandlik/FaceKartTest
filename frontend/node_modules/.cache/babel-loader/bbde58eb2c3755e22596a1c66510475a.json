{"ast":null,"code":"var _jsxFileName = \"/home/deep/Imbesideyou/Imbesideyou_assignment/src/components/features/faceDetection.js\",\n    _s = $RefreshSig$();\n\nimport { FaceDetection } from \"@mediapipe/face_detection/face_detection\";\nimport React, { useRef, useEffect } from \"react\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport { drawingUtils } from '@mediapipe/drawing_utils/drawing_utils';\nimport Webcam from \"react-webcam\"; // export default function bbb(webcamRef ,canvasRef){\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FaceShapeDetection() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight; // Set canvas width\n\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n\n    if (results.detections.length > 0) {\n      drawingUtils.drawRectangle(canvasCtx, results.detections[0].boundingBox, {\n        color: 'blue',\n        lineWidth: 4,\n        fillColor: '#00000000'\n      });\n      drawingUtils.drawLandmarks(canvasCtx, results.detections[0].landmarks, {\n        color: 'red',\n        radius: 5\n      });\n    }\n\n    canvasCtx.restore();\n  } // }\n  // setInterval(())\n\n\n  useEffect(() => {\n    const faceDetection = new FaceDetection({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_detection@0.0/${file}`;\n      }\n    });\n    faceDetection.setOptions({\n      modelSelection: 0,\n      minDetectionConfidence: 0.5\n    });\n    faceDetection.onResults(onResults);\n    const camera = new Camera(webcamRef.current.video, {\n      onFrame: async () => {\n        await faceDetection.send({\n          image: webcamRef.current.video\n        });\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"output_canvas\",\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FaceShapeDetection, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n\n_c = FaceShapeDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"FaceShapeDetection\");","map":{"version":3,"sources":["/home/deep/Imbesideyou/Imbesideyou_assignment/src/components/features/faceDetection.js"],"names":["FaceDetection","React","useRef","useEffect","Camera","drawingUtils","Webcam","FaceShapeDetection","webcamRef","canvasRef","onResults","results","videoWidth","current","video","videoHeight","width","height","canvasElement","canvasCtx","getContext","save","clearRect","drawImage","image","detections","length","drawRectangle","boundingBox","color","lineWidth","fillColor","drawLandmarks","landmarks","radius","restore","faceDetection","locateFile","file","setOptions","modelSelection","minDetectionConfidence","camera","onFrame","send","start","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":";;;AAAA,SAASA,aAAT,QAA6B,0CAA7B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,SAAQC,YAAR,QAA4B,wCAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;AAEA;;;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,QAAMC,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMO,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;;AAEA,WAASQ,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B;AACA,UAAMC,UAAU,GAAGJ,SAAS,CAACK,OAAV,CAAkBC,KAAlB,CAAwBF,UAA3C;AACA,UAAMG,WAAW,GAAGP,SAAS,CAACK,OAAV,CAAkBC,KAAlB,CAAwBC,WAA5C,CAH0B,CAK1B;;AACAN,IAAAA,SAAS,CAACI,OAAV,CAAkBG,KAAlB,GAA0BJ,UAA1B;AACAH,IAAAA,SAAS,CAACI,OAAV,CAAkBI,MAAlB,GAA2BF,WAA3B;AAEA,UAAMG,aAAa,GAAGT,SAAS,CAACI,OAAhC;AACA,UAAMM,SAAS,GAAGD,aAAa,CAACE,UAAd,CAAyB,IAAzB,CAAlB;AACAD,IAAAA,SAAS,CAACE,IAAV;AACFF,IAAAA,SAAS,CAACG,SAAV,CAAoB,CAApB,EAAuB,CAAvB,EAA0BJ,aAAa,CAACF,KAAxC,EAA+CE,aAAa,CAACD,MAA7D;AACAE,IAAAA,SAAS,CAACI,SAAV,CACIZ,OAAO,CAACa,KADZ,EACmB,CADnB,EACsB,CADtB,EACyBN,aAAa,CAACF,KADvC,EAC8CE,aAAa,CAACD,MAD5D;;AAEA,QAAIN,OAAO,CAACc,UAAR,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AACjCrB,MAAAA,YAAY,CAACsB,aAAb,CACIR,SADJ,EACeR,OAAO,CAACc,UAAR,CAAmB,CAAnB,EAAsBG,WADrC,EAEI;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,SAAS,EAAE,CAA3B;AAA8BC,QAAAA,SAAS,EAAE;AAAzC,OAFJ;AAGA1B,MAAAA,YAAY,CAAC2B,aAAb,CAA2Bb,SAA3B,EAAsCR,OAAO,CAACc,UAAR,CAAmB,CAAnB,EAAsBQ,SAA5D,EAAuE;AACrEJ,QAAAA,KAAK,EAAE,KAD8D;AAErEK,QAAAA,MAAM,EAAE;AAF6D,OAAvE;AAID;;AACDf,IAAAA,SAAS,CAACgB,OAAV;AACC,GA7B0C,CA8B3C;AAEA;;;AACAhC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiC,aAAa,GAAG,IAAIpC,aAAJ,CAAkB;AAACqC,MAAAA,UAAU,EAAGC,IAAD,IAAU;AAC3D,eAAQ,8DAA6DA,IAAK,EAA1E;AACD;AAFqC,KAAlB,CAAtB;AAGEF,IAAAA,aAAa,CAACG,UAAd,CAAyB;AACvBC,MAAAA,cAAc,EAAE,CADO;AAEvBC,MAAAA,sBAAsB,EAAE;AAFD,KAAzB;AAIAL,IAAAA,aAAa,CAAC1B,SAAd,CAAwBA,SAAxB;AAEA,UAAMgC,MAAM,GAAG,IAAItC,MAAJ,CAAWI,SAAS,CAACK,OAAV,CAAkBC,KAA7B,EAAoC;AACjD6B,MAAAA,OAAO,EAAE,YAAY;AACnB,cAAMP,aAAa,CAACQ,IAAd,CAAmB;AAACpB,UAAAA,KAAK,EAAEhB,SAAS,CAACK,OAAV,CAAkBC;AAA1B,SAAnB,CAAN;AACD,OAHgD;AAIjDE,MAAAA,KAAK,EAAE,IAJ0C;AAKjDC,MAAAA,MAAM,EAAE;AALyC,KAApC,CAAf;AAOAyB,IAAAA,MAAM,CAACG,KAAP;AAEH,GAnBQ,EAmBN,EAnBM,CAAT;AAoBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,GAAG,EAAErC,SADP;AAEE,QAAA,KAAK,EAAE;AACLsC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLC,UAAAA,WAAW,EAAE,MAHR;AAILC,UAAAA,IAAI,EAAE,CAJD;AAKLC,UAAAA,KAAK,EAAE,CALF;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLC,UAAAA,MAAM,EAAE,CAPH;AAQLpC,UAAAA,KAAK,EAAE,GARF;AASLC,UAAAA,MAAM,EAAE;AATH;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,EAcK,GAdL,eAeE;AACE,QAAA,GAAG,EAAER,SADP;AAEE,QAAA,SAAS,EAAC,eAFZ;AAGE,QAAA,KAAK,EAAE;AACLqC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLC,UAAAA,WAAW,EAAE,MAHR;AAILC,UAAAA,IAAI,EAAE,CAJD;AAKLC,UAAAA,KAAK,EAAE,CALF;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLC,UAAAA,MAAM,EAAE,CAPH;AAQLpC,UAAAA,KAAK,EAAE,GARF;AASLC,UAAAA,MAAM,EAAE;AATH;AAHT;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAxFuBV,kB;;KAAAA,kB","sourcesContent":["import { FaceDetection} from \"@mediapipe/face_detection/face_detection\";\nimport React, { useRef, useEffect } from \"react\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport {drawingUtils}  from '@mediapipe/drawing_utils/drawing_utils';\nimport Webcam from \"react-webcam\";\n\n// export default function bbb(webcamRef ,canvasRef){\n\n// }\n\nexport default function FaceShapeDetection() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // Set canvas width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n  canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n  canvasCtx.drawImage(\n      results.image, 0, 0, canvasElement.width, canvasElement.height);\n  if (results.detections.length > 0) {\n    drawingUtils.drawRectangle(\n        canvasCtx, results.detections[0].boundingBox,\n        {color: 'blue', lineWidth: 4, fillColor: '#00000000'});\n    drawingUtils.drawLandmarks(canvasCtx, results.detections[0].landmarks, {\n      color: 'red',\n      radius: 5,\n    });\n  }\n  canvasCtx.restore();\n  }\n  // }\n\n  // setInterval(())\n  useEffect(() => {\n    const faceDetection = new FaceDetection({locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_detection@0.0/${file}`;\n      }});\n      faceDetection.setOptions({\n        modelSelection: 0,\n        minDetectionConfidence: 0.5\n      });\n      faceDetection.onResults(onResults);\n      \n      const camera = new Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await faceDetection.send({image: webcamRef.current.video});\n        },\n        width: 1280,\n        height: 720\n      });\n      camera.start();\n      \n  }, []);\n  return (\n    <center>\n      <div className=\"App\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />{\" \"}\n        <canvas\n          ref={canvasRef}\n          className=\"output_canvas\"\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        ></canvas>\n      </div>\n    </center>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}