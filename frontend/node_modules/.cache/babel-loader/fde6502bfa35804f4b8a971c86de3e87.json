{"ast":null,"code":"import _asyncToGenerator from\"/home/deep/Imbesideyou/Imbesideyou_assignment/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/deep/Imbesideyou/Imbesideyou_assignment/frontend/node_modules/@babel/runtime/regenerator/index.js\";import{Holistic,POSE_CONNECTIONS,HAND_CONNECTIONS,FACEMESH_TESSELATION}from\"@mediapipe/holistic/holistic\";import{Camera}from\"@mediapipe/camera_utils/camera_utils\";import{drawConnectors,drawLandmarks}from\"@mediapipe/drawing_utils/drawing_utils\";export default function BodyPose(webcamRef,canvasRef){var holistic=new Holistic({locateFile:function locateFile(file){return\"https://cdn.jsdelivr.net/npm/@mediapipe/holistic/\".concat(file);}});holistic.setOptions({modelComplexity:1,smoothLandmarks:true,enableSegmentation:true,smoothSegmentation:true,refineFaceLandmarks:true,minDetectionConfidence:0.5,minTrackingConfidence:0.5});holistic.onResults(function(results){var videoWidth=webcamRef.current.video.videoWidth;var videoHeight=webcamRef.current.video.videoHeight;// Set canvas width\ncanvasRef.current.width=videoWidth;canvasRef.current.height=videoHeight;var canvasElement=canvasRef.current;var canvasCtx=canvasElement.getContext(\"2d\");canvasCtx.save();canvasCtx.globalCompositeOperation='source-over';drawConnectors(canvasCtx,results.poseLandmarks,POSE_CONNECTIONS,{color:'#FFF',lineWidth:4});drawLandmarks(canvasCtx,results.poseLandmarks,{color:'#000',lineWidth:2});drawConnectors(canvasCtx,results.faceLandmarks,FACEMESH_TESSELATION,{color:'#C0C0C070',lineWidth:1});drawConnectors(canvasCtx,results.leftHandLandmarks,HAND_CONNECTIONS,{color:'#FFF',lineWidth:5});drawLandmarks(canvasCtx,results.leftHandLandmarks,{color:'#0009',lineWidth:2});drawConnectors(canvasCtx,results.rightHandLandmarks,HAND_CONNECTIONS,{color:'#FFF',lineWidth:5});drawLandmarks(canvasCtx,results.rightHandLandmarks,{color:'#0009',lineWidth:2});canvasCtx.restore();});var camera=new Camera(webcamRef.current.video,{onFrame:function(){var _onFrame=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return holistic.send({image:webcamRef.current.video});case 2:case\"end\":return _context.stop();}}},_callee);}));function onFrame(){return _onFrame.apply(this,arguments);}return onFrame;}(),width:1280,height:720});camera.start();};","map":{"version":3,"sources":["/home/deep/Imbesideyou/Imbesideyou_assignment/frontend/src/components/features/bodyPoseDetection.js"],"names":["Holistic","POSE_CONNECTIONS","HAND_CONNECTIONS","FACEMESH_TESSELATION","Camera","drawConnectors","drawLandmarks","BodyPose","webcamRef","canvasRef","holistic","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","refineFaceLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","videoWidth","current","video","videoHeight","width","height","canvasElement","canvasCtx","getContext","save","globalCompositeOperation","poseLandmarks","color","lineWidth","faceLandmarks","leftHandLandmarks","rightHandLandmarks","restore","camera","onFrame","send","image","start"],"mappings":"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","sourcesContent":["import {\n  Holistic,\n  POSE_CONNECTIONS,\n  HAND_CONNECTIONS,\n  FACEMESH_TESSELATION\n} from \"@mediapipe/holistic/holistic\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport {\n  drawConnectors,\n  drawLandmarks,\n} from \"@mediapipe/drawing_utils/drawing_utils\";\n\nexport default function  BodyPose(webcamRef, canvasRef){\n  const holistic = new Holistic({locateFile: (file) => {\n    return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic/${file}`;\n  }});\n  holistic.setOptions({\n    modelComplexity: 1,\n    smoothLandmarks: true,\n    enableSegmentation: true,\n    smoothSegmentation: true,\n    refineFaceLandmarks: true,\n    minDetectionConfidence: 0.5,\n    minTrackingConfidence: 0.5\n  });\n  holistic.onResults((results) => {\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // Set canvas width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n\n\n    canvasCtx.save();\n\n  canvasCtx.globalCompositeOperation = 'source-over';\n  drawConnectors(canvasCtx, results.poseLandmarks, POSE_CONNECTIONS,\n                 {color: '#FFF', lineWidth: 4});\n  drawLandmarks(canvasCtx, results.poseLandmarks,\n                {color: '#000', lineWidth: 2});\n  drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION,\n                 {color: '#C0C0C070', lineWidth: 1});\n  drawConnectors(canvasCtx, results.leftHandLandmarks, HAND_CONNECTIONS,\n                 {color: '#FFF', lineWidth: 5});\n  drawLandmarks(canvasCtx, results.leftHandLandmarks,\n                {color: '#0009', lineWidth: 2});\n  drawConnectors(canvasCtx, results.rightHandLandmarks, HAND_CONNECTIONS,\n                 {color: '#FFF', lineWidth: 5});\n  drawLandmarks(canvasCtx, results.rightHandLandmarks,\n                {color: '#0009', lineWidth: 2});\n  canvasCtx.restore();\n  });\n  \n  const camera = new Camera( webcamRef.current.video, {\n    onFrame: async () => {\n      await holistic.send({image:  webcamRef.current.video});\n    },\n    width: 1280,\n    height: 720\n  });\n  camera.start();\n  \n\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}