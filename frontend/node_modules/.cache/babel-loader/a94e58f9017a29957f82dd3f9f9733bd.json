{"ast":null,"code":"var _jsxFileName = \"/home/deep/Imbesideyou/Imbesideyou_assignment/src/App.js\";\nimport { FaceMesh } from \"@mediapipe/face_mesh\";\nimport React, { useRef, useEffect } from \"react\";\nimport * as Facemesh from \"@mediapipe/face_mesh\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport { drawConnectors } from '@mediapipe/drawing_utils/drawing_utils';\nimport Webcam from \"react-webcam\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight; // Set canvas width\n\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n\n    if (results.multiFaceLandmarks) {\n      for (const landmarks of results.multiFaceLandmarks) {\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_TESSELATION, {\n          color: \"#C0C0C070\",\n          lineWidth: 1\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_RIGHT_EYE, {\n          color: \"#FF3030\"\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_RIGHT_EYEBROW, {\n          color: \"#FF3030\"\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_LEFT_EYE, {\n          color: \"#30FF30\"\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_LEFT_EYEBROW, {\n          color: \"#30FF30\"\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_FACE_OVAL, {\n          color: \"#E0E0E0\"\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_LIPS, {\n          color: \"#E0E0E0\"\n        });\n      }\n    }\n\n    canvasCtx.restore();\n  } // }\n  // setInterval(())\n\n\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`;\n      }\n    });\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    faceMesh.onResults(onResults);\n\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null) {\n      const camera = new Camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await faceMesh.send({\n            image: webcamRef.current.video\n          });\n        },\n        width: 1280,\n        height: 720\n      });\n      camera.start();\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    className: \"output_canvas\",\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/deep/Imbesideyou/Imbesideyou_assignment/src/App.js"],"names":["FaceMesh","React","useRef","useEffect","Facemesh","Camera","drawConnectors","Webcam","App","webcamRef","canvasRef","onResults","results","videoWidth","current","video","videoHeight","width","height","canvasElement","canvasCtx","getContext","save","clearRect","drawImage","image","multiFaceLandmarks","landmarks","FACEMESH_TESSELATION","color","lineWidth","FACEMESH_RIGHT_EYE","FACEMESH_RIGHT_EYEBROW","FACEMESH_LEFT_EYE","FACEMESH_LEFT_EYEBROW","FACEMESH_FACE_OVAL","FACEMESH_LIPS","restore","faceMesh","locateFile","file","setOptions","maxNumFaces","minDetectionConfidence","minTrackingConfidence","camera","onFrame","send","start","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import { FaceMesh } from \"@mediapipe/face_mesh\";\nimport React, { useRef, useEffect } from \"react\";\nimport * as Facemesh from \"@mediapipe/face_mesh\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport {drawConnectors}  from '@mediapipe/drawing_utils/drawing_utils';\nimport Webcam from \"react-webcam\";\n\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // Set canvas width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(\n      results.image,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    );\n    if (results.multiFaceLandmarks) {\n      for (const landmarks of results.multiFaceLandmarks) {\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_TESSELATION, {\n          color: \"#C0C0C070\",\n          lineWidth: 1,\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_RIGHT_EYE, {\n          color: \"#FF3030\",\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_RIGHT_EYEBROW, {\n          color: \"#FF3030\",\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_LEFT_EYE, {\n          color: \"#30FF30\",\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_LEFT_EYEBROW, {\n          color: \"#30FF30\",\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_FACE_OVAL, {\n          color: \"#E0E0E0\",\n        });\n        drawConnectors(canvasCtx, landmarks, Facemesh.FACEMESH_LIPS, {\n          color: \"#E0E0E0\",\n        });\n      }\n    }\n    canvasCtx.restore();\n  }\n  // }\n\n  // setInterval(())\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`;\n      },\n    });\n\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    faceMesh.onResults(onResults);\n\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null\n    ) {\n      const camera = new Camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await faceMesh.send({ image: webcamRef.current.video });\n        },\n        width: 1280,\n        height: 720,\n      });\n      camera.start();\n    }\n  }, []);\n  return (\n    <center>\n      <div className=\"App\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />{\" \"}\n        <canvas\n          ref={canvasRef}\n          className=\"output_canvas\"\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        ></canvas>\n      </div>\n    </center>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}