{"ast":null,"code":"import _asyncToGenerator from\"/home/deep/Imbesideyou/Imbesideyou_assignment/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/deep/Imbesideyou/Imbesideyou_assignment/frontend/node_modules/@babel/runtime/regenerator/index.js\";import{Camera}from\"@mediapipe/camera_utils/camera_utils\";import{SelfieSegmentation}from\"@mediapipe/selfie_segmentation/selfie_segmentation\";export default function GreenScreen(webcamRef,canvasRef){var selfieSegmentation=new SelfieSegmentation({locateFile:function locateFile(file){return\"https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/\".concat(file);}});selfieSegmentation.setOptions({modelSelection:1});selfieSegmentation.onResults(function(results){var videoWidth=webcamRef.current.video.videoWidth;var videoHeight=webcamRef.current.video.videoHeight;// Set canvas width\ncanvasRef.current.width=videoWidth;canvasRef.current.height=videoHeight;var canvasElement=canvasRef.current;var canvasCtx=canvasElement.getContext(\"2d\");canvasCtx.save();// canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\ncanvasCtx.drawImage(results.segmentationMask,0,0,canvasElement.width,canvasElement.height);// Only overwrite existing pixels.\ncanvasCtx.globalCompositeOperation=\"source-in\";canvasCtx.fillStyle=\"green\";canvasCtx.drawImage(results.image,0,0,canvasElement.width,canvasElement.height);// Only overwrite missing pixels.\ncanvasCtx.globalCompositeOperation=\"destination-atop\";canvasCtx.fillRect(0,0,canvasElement.width,canvasElement.height);canvasCtx.restore();});var camera=new Camera(webcamRef.current.video,{onFrame:function(){var _onFrame=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return selfieSegmentation.send({image:webcamRef.current.video});case 2:case\"end\":return _context.stop();}}},_callee);}));function onFrame(){return _onFrame.apply(this,arguments);}return onFrame;}(),width:1280,height:720});camera.start();}","map":{"version":3,"sources":["/home/deep/Imbesideyou/Imbesideyou_assignment/frontend/src/components/features/selfieSegmentation.js"],"names":["Camera","SelfieSegmentation","GreenScreen","webcamRef","canvasRef","selfieSegmentation","locateFile","file","setOptions","modelSelection","onResults","results","videoWidth","current","video","videoHeight","width","height","canvasElement","canvasCtx","getContext","save","drawImage","segmentationMask","globalCompositeOperation","fillStyle","image","fillRect","restore","camera","onFrame","send","start"],"mappings":"2RAAA,OAASA,MAAT,KAAuB,sCAAvB,CACA,OAASC,kBAAT,KAAmC,oDAAnC,CAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,SAArB,CAAiCC,SAAjC,CAA2C,CACxD,GAAMC,CAAAA,kBAAkB,CAAG,GAAIJ,CAAAA,kBAAJ,CAAuB,CAChDK,UAAU,CAAE,oBAACC,IAAD,CAAU,CACpB,4EAAsEA,IAAtE,EACD,CAH+C,CAAvB,CAA3B,CAKAF,kBAAkB,CAACG,UAAnB,CAA8B,CAC5BC,cAAc,CAAE,CADY,CAA9B,EAGAJ,kBAAkB,CAACK,SAAnB,CAA6B,SAACC,OAAD,CAAa,CACxC,GAAMC,CAAAA,UAAU,CAAGT,SAAS,CAACU,OAAV,CAAkBC,KAAlB,CAAwBF,UAA3C,CACA,GAAMG,CAAAA,WAAW,CAAGZ,SAAS,CAACU,OAAV,CAAkBC,KAAlB,CAAwBC,WAA5C,CAEA;AACAX,SAAS,CAACS,OAAV,CAAkBG,KAAlB,CAA0BJ,UAA1B,CACAR,SAAS,CAACS,OAAV,CAAkBI,MAAlB,CAA2BF,WAA3B,CAEA,GAAMG,CAAAA,aAAa,CAAGd,SAAS,CAACS,OAAhC,CACA,GAAMM,CAAAA,SAAS,CAAGD,aAAa,CAACE,UAAd,CAAyB,IAAzB,CAAlB,CACAD,SAAS,CAACE,IAAV,GACA;AACAF,SAAS,CAACG,SAAV,CACEX,OAAO,CAACY,gBADV,CAEE,CAFF,CAGE,CAHF,CAIEL,aAAa,CAACF,KAJhB,CAKEE,aAAa,CAACD,MALhB,EAQA;AACAE,SAAS,CAACK,wBAAV,CAAqC,WAArC,CACAL,SAAS,CAACM,SAAV,CAAsB,OAAtB,CACAN,SAAS,CAACG,SAAV,CACIX,OAAO,CAACe,KADZ,CAEI,CAFJ,CAGI,CAHJ,CAIIR,aAAa,CAACF,KAJlB,CAKIE,aAAa,CAACD,MALlB,EASA;AACAE,SAAS,CAACK,wBAAV,CAAqC,kBAArC,CACAL,SAAS,CAACQ,QAAV,CAAmB,CAAnB,CAAsB,CAAtB,CAAyBT,aAAa,CAACF,KAAvC,CAA8CE,aAAa,CAACD,MAA5D,EACAE,SAAS,CAACS,OAAV,GACD,CApCD,EAsCA,GAAMC,CAAAA,MAAM,CAAG,GAAI7B,CAAAA,MAAJ,CAAWG,SAAS,CAACU,OAAV,CAAkBC,KAA7B,CAAoC,CACjDgB,OAAO,iFAAE,yJACDzB,CAAAA,kBAAkB,CAAC0B,IAAnB,CAAwB,CAAEL,KAAK,CAAEvB,SAAS,CAACU,OAAV,CAAkBC,KAA3B,CAAxB,CADC,uDAAF,+EAD0C,CAIjDE,KAAK,CAAE,IAJ0C,CAKjDC,MAAM,CAAE,GALyC,CAApC,CAAf,CAOAY,MAAM,CAACG,KAAP,GACD","sourcesContent":["import { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport { SelfieSegmentation } from \"@mediapipe/selfie_segmentation/selfie_segmentation\";\n\nexport default function GreenScreen(webcamRef , canvasRef){\n  const selfieSegmentation = new SelfieSegmentation({\n    locateFile: (file) => {\n      return `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`;\n    },\n  });\n  selfieSegmentation.setOptions({\n    modelSelection: 1,\n  });\n  selfieSegmentation.onResults((results) => {\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // Set canvas width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    // canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(\n      results.segmentationMask,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    );\n\n    // Only overwrite existing pixels.\n    canvasCtx.globalCompositeOperation = \"source-in\";\n    canvasCtx.fillStyle = \"green\";\n    canvasCtx.drawImage(\n        results.image,\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n\n\n    // Only overwrite missing pixels.\n    canvasCtx.globalCompositeOperation = \"destination-atop\";\n    canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.restore();\n  });\n\n  const camera = new Camera(webcamRef.current.video, {\n    onFrame: async () => {\n      await selfieSegmentation.send({ image: webcamRef.current.video });\n    },\n    width: 1280,\n    height: 720,\n  });\n  camera.start();\n}\n\n"]},"metadata":{},"sourceType":"module"}