{"ast":null,"code":"var _jsxFileName = \"/home/deep/Imbesideyou/Imbesideyou_assignment/src/components/features/selfieSegmentation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport { SelfieSegmentation } from \"@mediapipe/selfie_segmentation/selfie_segmentation\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelfieSegmentationDetection() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight; // Set canvas width\n\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.segmentationMask, 0, 0, canvasElement.width, canvasElement.height); // Only overwrite existing pixels.\n\n    canvasCtx.globalCompositeOperation = \"source-in\";\n    canvasCtx.fillStyle = \"#00FF00\";\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height); // Only overwrite missing pixels.\n\n    canvasCtx.globalCompositeOperation = \"destination-atop\";\n    canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.restore();\n  } // }\n  // setInterval(())\n\n\n  useEffect(() => {\n    const selfieSegmentation = new SelfieSegmentation({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`;\n      }\n    });\n    selfieSegmentation.setOptions({\n      modelSelection: 1\n    });\n    selfieSegmentation.onResults(onResults);\n    const camera = new Camera(webcamRef.current.video, {\n      onFrame: async () => {\n        await selfieSegmentation.send({\n          image: webcamRef.current.video\n        });\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"output_canvas\",\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelfieSegmentationDetection, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n\n_c = SelfieSegmentationDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelfieSegmentationDetection\");","map":{"version":3,"sources":["/home/deep/Imbesideyou/Imbesideyou_assignment/src/components/features/selfieSegmentation.js"],"names":["React","useRef","useEffect","Camera","SelfieSegmentation","Webcam","SelfieSegmentationDetection","webcamRef","canvasRef","onResults","results","videoWidth","current","video","videoHeight","width","height","canvasElement","canvasCtx","getContext","save","clearRect","drawImage","segmentationMask","globalCompositeOperation","fillStyle","image","fillRect","restore","selfieSegmentation","locateFile","file","setOptions","modelSelection","camera","onFrame","send","start","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport { SelfieSegmentation } from \"@mediapipe/selfie_segmentation/selfie_segmentation\";\nimport Webcam from \"react-webcam\";\n\nexport default function SelfieSegmentationDetection() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // Set canvas width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(\n      results.segmentationMask,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    );\n\n    // Only overwrite existing pixels.\n    canvasCtx.globalCompositeOperation = \"source-in\";\n    canvasCtx.fillStyle = \"#00FF00\";\n    canvasCtx.drawImage(\n        results.image,\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n\n\n    // Only overwrite missing pixels.\n    canvasCtx.globalCompositeOperation = \"destination-atop\";\n    canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.restore();\n  }\n  // }\n\n  // setInterval(())\n  useEffect(() => {\n    const selfieSegmentation = new SelfieSegmentation({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`;\n      },\n    });\n    selfieSegmentation.setOptions({\n      modelSelection: 1,\n    });\n    selfieSegmentation.onResults(onResults);\n\n    const camera = new Camera(webcamRef.current.video, {\n      onFrame: async () => {\n        await selfieSegmentation.send({ image: webcamRef.current.video });\n      },\n      width: 1280,\n      height: 720,\n    });\n    camera.start();\n  }, []);\n\n  return (\n    <center>\n      <div className=\"App\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />{\" \"}\n        <canvas\n          ref={canvasRef}\n          className=\"output_canvas\"\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        ></canvas>\n      </div>\n    </center>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}