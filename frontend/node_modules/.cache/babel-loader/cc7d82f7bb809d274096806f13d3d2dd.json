{"ast":null,"code":"var _jsxFileName = \"/home/deep/Imbesideyou/Imbesideyou_assignment/src/components/features/bodyPoseDetection.js\",\n    _s = $RefreshSig$();\n\nimport { Pose, POSE_CONNECTIONS, LandmarkGrid } from \"@mediapipe/pose/pose\";\nimport React, { useRef, useEffect } from \"react\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils/drawing_utils\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BodyPoseDetection() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const landmarkContainer = useRef(null);\n  const grid = new LandmarkGrid(landmarkContainer);\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight; // Set canvas width\n\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n\n    if (!results.poseLandmarks) {\n      grid.updateLandmarks([]);\n      return;\n    }\n\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.segmentationMask, 0, 0, canvasElement.width, canvasElement.height); // Only overwrite existing pixels.\n\n    canvasCtx.globalCompositeOperation = \"source-in\";\n    canvasCtx.fillStyle = \"#00FF00\";\n    canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height); // Only overwrite missing pixels.\n\n    canvasCtx.globalCompositeOperation = \"destination-atop\";\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.globalCompositeOperation = \"source-over\";\n    drawConnectors(canvasCtx, results.poseLandmarks, POSE_CONNECTIONS, {\n      color: \"#00FF00\",\n      lineWidth: 4\n    });\n    drawLandmarks(canvasCtx, results.poseLandmarks, {\n      color: \"#FF0000\",\n      lineWidth: 2\n    });\n    canvasCtx.restore();\n    grid.updateLandmarks(results.poseWorldLandmarks);\n  } // }\n  // setInterval(())\n\n\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      }\n    });\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: true,\n      smoothSegmentation: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    pose.onResults(onResults);\n    const camera = new Camera(webcamRef.current.video, {\n      onFrame: async () => {\n        await pose.send({\n          image: webcamRef.current.video\n        });\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"output_canvas\",\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: landmarkContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BodyPoseDetection, \"dkrgjuq6p5MZeCzj4o8ZaKsgG28=\");\n\n_c = BodyPoseDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyPoseDetection\");","map":{"version":3,"sources":["/home/deep/Imbesideyou/Imbesideyou_assignment/src/components/features/bodyPoseDetection.js"],"names":["Pose","POSE_CONNECTIONS","LandmarkGrid","React","useRef","useEffect","Camera","drawConnectors","drawLandmarks","Webcam","BodyPoseDetection","webcamRef","canvasRef","landmarkContainer","grid","onResults","results","videoWidth","current","video","videoHeight","width","height","canvasElement","canvasCtx","getContext","poseLandmarks","updateLandmarks","save","clearRect","drawImage","segmentationMask","globalCompositeOperation","fillStyle","fillRect","image","color","lineWidth","restore","poseWorldLandmarks","pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","minDetectionConfidence","minTrackingConfidence","camera","onFrame","send","start","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import { Pose, POSE_CONNECTIONS, LandmarkGrid } from \"@mediapipe/pose/pose\";\nimport React, { useRef, useEffect } from \"react\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport {\n  drawConnectors,\n  drawLandmarks,\n} from \"@mediapipe/drawing_utils/drawing_utils\";\nimport Webcam from \"react-webcam\";\n\nexport default function BodyPoseDetection() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const landmarkContainer = useRef(null);\n  const grid = new LandmarkGrid(landmarkContainer);\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // Set canvas width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    if (!results.poseLandmarks) {\n      grid.updateLandmarks([]);\n      return;\n    }\n\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(\n      results.segmentationMask,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    );\n\n    // Only overwrite existing pixels.\n    canvasCtx.globalCompositeOperation = \"source-in\";\n    canvasCtx.fillStyle = \"#00FF00\";\n    canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n\n    // Only overwrite missing pixels.\n    canvasCtx.globalCompositeOperation = \"destination-atop\";\n    canvasCtx.drawImage(\n      results.image,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    );\n\n    canvasCtx.globalCompositeOperation = \"source-over\";\n    drawConnectors(canvasCtx, results.poseLandmarks, POSE_CONNECTIONS, {\n      color: \"#00FF00\",\n      lineWidth: 4,\n    });\n    drawLandmarks(canvasCtx, results.poseLandmarks, {\n      color: \"#FF0000\",\n      lineWidth: 2,\n    });\n    canvasCtx.restore();\n\n    grid.updateLandmarks(results.poseWorldLandmarks);\n  }\n  // }\n\n  // setInterval(())\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      },\n    });\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: true,\n      smoothSegmentation: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n    pose.onResults(onResults);\n\n    const camera = new Camera(webcamRef.current.video, {\n      onFrame: async () => {\n        await pose.send({ image: webcamRef.current.video });\n      },\n      width: 1280,\n      height: 720,\n    });\n    camera.start();\n  }, []);\n  return (\n    <center>\n      <div className=\"App\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />{\" \"}\n        <canvas\n          ref={canvasRef}\n          className=\"output_canvas\"\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        ></canvas>\n        <div ref={landmarkContainer}></div>\n      </div>\n    </center>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}